# =============================================================================
# QuantumOS Environment Configuration
# Copy this file to .env and configure with your actual values
# =============================================================================

# Development Environment
NODE_ENV=development
DEBUG=quantumos:*
HOT_RELOAD=true
DEV_SERVER_PORT=8080

# Database Configuration
DATABASE_PATH=quantumos.db
DATABASE_TYPE=sqlite
DATABASE_LOGGING=false
DATABASE_SYNCHRONIZE=true
# For PostgreSQL/MySQL (uncomment and configure if needed)
# DATABASE_HOST=localhost
# DATABASE_PORT=5432
# DATABASE_USERNAME=quantumos
# DATABASE_PASSWORD=your-db-password
# DATABASE_NAME=quantumos

# Server Configuration
SERVER_PORT=3000
SERVER_HOST=localhost
SERVER_CORS_ORIGIN=*

# Security Configuration (CHANGE THESE IN PRODUCTION!)
JWT_SECRET=dev-jwt-secret-key
ENCRYPTION_KEY=dev-encryption-key
SESSION_SECRET=dev-session-secret

# =============================================================================
# QUANTUM PROVIDER CONFIGURATION
# =============================================================================

# IBM Quantum Configuration
# Get your token from: https://quantum-computing.ibm.com/account
IBM_QUANTUM_TOKEN=your-ibm-quantum-token-here
IBM_QUANTUM_HUB=ibm-q
IBM_QUANTUM_GROUP=open
IBM_QUANTUM_PROJECT=main

# Google Quantum AI Configuration  
# Set up Google Cloud project and service account
GOOGLE_CLOUD_PROJECT_ID=your-google-cloud-project-id
GOOGLE_CLOUD_CREDENTIALS_PATH=./credentials/google-quantum-service-account.json

# AWS Braket Configuration
# Configure AWS credentials for Braket access
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
AWS_REGION=us-east-1
AWS_BRAKET_S3_BUCKET=your-braket-s3-bucket

# Rigetti Quantum Cloud Services Configuration
# Get credentials from: https://qcs.rigetti.com/
RIGETTI_API_KEY=your-rigetti-api-key
RIGETTI_USER_ID=your-rigetti-user-id

# IonQ Configuration
# Get API key from: https://cloud.ionq.com/
IONQ_API_KEY=your-ionq-api-key

# Provider-specific settings
QUANTUM_PROVIDER_TIMEOUT=30000
QUANTUM_PROVIDER_RETRY_ATTEMPTS=3
QUANTUM_MAX_CONCURRENT_JOBS=10
QUANTUM_JOB_POLLING_INTERVAL=10000

# Circuit execution defaults
DEFAULT_SHOTS=1024
MAX_SHOTS_PER_JOB=100000
MAX_QUBITS_PER_CIRCUIT=100
MAX_GATES_PER_CIRCUIT=10000

# Cost controls
MAX_COST_PER_JOB=10.00
ENABLE_COST_WARNINGS=true
ENABLE_AUTOMATIC_DEVICE_SELECTION=true

# Python Environment
PYTHON_PATH=python3
PYTHON_VIRTUAL_ENV=quantum-env
PYTHON_REQUIREMENTS_PATH=requirements.txt

# Logging Configuration
LOG_LEVEL=info
LOG_FORMAT=json
LOG_FILE_PATH=logs/quantumos.log
LOG_MAX_SIZE=100MB
LOG_MAX_FILES=10

# Performance Configuration
MAX_CONCURRENT_JOBS=10
JOB_TIMEOUT_SECONDS=3600
CIRCUIT_CACHE_SIZE=1000
RESULT_CACHE_TTL=86400

# Development Configuration
NODE_ENV=development
DEBUG=quantumos:*
HOT_RELOAD=true
DEV_SERVER_PORT=8080

# Monitoring and Telemetry
TELEMETRY_ENABLED=true
METRICS_PORT=9090
HEALTH_CHECK_PORT=8080
TRACING_ENABLED=false

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_INTERVAL_HOURS=24
BACKUP_RETENTION_DAYS=30
BACKUP_PATH=backups/

# Email Configuration (for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@example.com
SMTP_PASS=your-email-password

# Notification Configuration
NOTIFICATIONS_ENABLED=true
SLACK_WEBHOOK_URL=your-slack-webhook-url
DISCORD_WEBHOOK_URL=your-discord-webhook-url